name: Build and release gunnel 
on:
  push:
    branches:
      - main
jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Get version
        id: version
        run: |
          version=$(grep -o 'const version = "[^"]*"' main.go | cut -d'"' -f2)
          echo "Build version $version"
          echo "version=$version" >> $GITHUB_OUTPUT

  build-and-upload:
    needs: get-version
    name: Build and upload
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: 'gunnel'
            platform:  'linux/amd64'
            os: 'ubuntu-latest'
          - name: 'gunnel.exe'
            platform:  'windows/amd64'
            os: 'windows-latest'
          # - name: 'gunnel-macos'
          #   platform:  'darwin/universal'
          #   os: 'macos-latest'
    runs-on: ${{ matrix.build.os }} 
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        run: |
          npm install -g pnpm

      - name: Build wails
        uses: dAppServer/wails-build-action@v2.2
        id: build
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          package: true
          go-version: '1.23'
          wails-version: 'v2.9.2'
          node-version: '20.11.1'

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.build.name }}
          path: |
            */bin/
            *\bin\*

  create-release:
    needs: [get-version,build-and-upload]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tag commit
        run: |
          echo "Tagging commit with version ${{ needs.get-version.outputs.version }}"
          git tag ${{ needs.get-version.outputs.version }}
          git push origin ${{ needs.get-version.outputs.version }}

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            */bin/*
          tag_name: ${{ needs.get-version.outputs.version }}